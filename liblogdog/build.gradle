apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    compileSdkVersion 32
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation('com.github.pedrovgs:renderers:4.1.0')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'io.github.nondeepshit'
            artifactId 'logdog'
            version "${ossrhVersion}"
            pom {
                name = 'logdog'
                description = 'log view widget for android developers'
                url = 'https://github.com/nondeepshit/logdog'
                inceptionYear = '2022'

                scm {
                    url = 'https://github.com/nondeepshit/logdog'
                    connection = 'scm:git@github.com:nondeepshit/logdog.git'
                    developerConnection = 'scm:git@github.com:nondeepshit/logdog.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                        comments = 'A business-friendly OSS license'
                    }
                }

                developers {
                    developer {
                        id = "${ossrhUsername}"
                        name = "${ossrhUsername}"
                        email = "${ossrhEmail}"
                        url = 'https://github.com/nondeepshit/logdog'
                    }
                }

                issueManagement {
                    system = 'Github'
                    url = 'https://github.com/nondeepshit/logdog'
                }
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                    if (dp.group == "com.github.pedrovgs") {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)
                        if (dp.excludeRules.size() > 0) {
                            def exclusions = dependencyNode.appendNode('exclusions')
                            dp.excludeRules.each { ExcludeRule ex ->
                                def exclusion = exclusions.appendNode('exclusion')
                                exclusion.appendNode('groupId', ex.group)
                                exclusion.appendNode('artifactId', ex.module)
                            }
                        }
                    }
                }
            }
            artifact "$buildDir/outputs/aar/liblogdog-release.aar"
            //需要上传的资源jar路径或者是aar路径，这边可以填写一个生成jar的task，如makeJar方法就是一个生成jar的task
        }
    }
    repositories {
        maven {
            // 指定要上传的maven仓库
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            //Maven仓库用户名和密码
            credentials {
                username project.property("ossrhUsername")
                password project.property("ossrhPassword")
            }
        }
    }
}
signing {
    sign publishing.publications.maven //签名配置
}
